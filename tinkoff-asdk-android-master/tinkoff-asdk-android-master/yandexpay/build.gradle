apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'ru.tinkoff.mobile.core-plugin'
apply from: '../gradle/dokka.gradle'
apply from: rootProject.file('gradle/versions.gradle')
apply from: '../gradle/publish.gradle'

android {
    namespace 'ru.tinkoff.acquiring.yandexpay'

    compileSdkVersion rootProject.compileSdk
    buildToolsVersion rootProject.buildTools

    defaultConfig {
        minSdkVersion rootProject.minSdk
        targetSdkVersion rootProject.targetSdk
        buildConfigField("String", "ASDK_VERSION_NAME", "\"$VERSION_NAME\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    tasks.whenTaskAdded { task ->
        if (task.name.contains("AndroidTest")) {
            task.enabled = false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleExtensionsVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    
    api project(':core')
    implementation project(':ui')

    implementation "androidx.appcompat:appcompat:${appCompatVersion}"
    implementation("com.yandex.pay:core:${yandexPayVersion}")


    testImplementation 'junit:junit:4.13'
    testImplementation "org.mockito.kotlin:mockito-kotlin:${mokitoKotlinVersion}"
    testImplementation 'org.mockito:mockito-inline:2.13.0'
}

coreCommon {

    /**
     * Опциональный флаг для включения/выключения публикации модуля в корпоративный репозиторий, по-умолчанию = true
     * Логин и пароль для доступа в репозиторий будут взяты из системных переменных
     * PRIVATE_NEXUS_USER и PRIVATE_NEXUS_PASSWORD
     */
    mavenPublishEnabled = false

    /**
     * Опциональный флаг для включения/выключения detekt, по-умолчанию = false
     * При использовании может потребоваться увеличить размер -XX:MaxMetaspaceSize
     * см. https://github.com/Kotlin/dokka/wiki/faq#dokka-throws-javalangoutofmemoryerror-metaspace
     */
    detektEnabled = false
    detektConfig = rootProject.files("gradle/config/detekt.yml")

    /**
     * Опциональный параметр для включения/выключения таски проверки/обновление новых версий core-библиотек
     */
    versionsEnabled = true

    /**
     * Опциональный параметр для включения/выключения таски поиска устаревших android-ресусров,
     * помеченных в стиле AOSP
     */
    collectDeprecatedResourcesEnabled = false

    /**
     * Опциональный параметр для указания файла, где будут записаны найденные устаревшие ресурсы модуля,
     * для использования в линтере (TBD)
     * по-умолчанию = file("$buildDir/deprecated-resources/deprecated.txt")
     */
    collectDeprecatedResourcesOutput = file("$buildDir/deprecated-resources/deprecated.txt")
}
